---
swagger: "2.0"
info:
  x-ibm-name: "oauth-2leg"
  title: "oauth-2leg"
  version: "1.0.0"
schemes:
- "https"
basePath: "/oauth20"
securityDefinitions:
  clientID:
    description: "application's client_id"
    in: "query"
    name: "client_id"
    type: "apiKey"
  clientIdHeader:
    in: "header"
    type: "apiKey"
    name: "X-IBM-Client-Id"
  clientSecretHeader:
    in: "header"
    type: "apiKey"
    name: "X-IBM-Client-Secret"
security:
- clientID: []
paths:
  /authorize:
    get:
      produces:
      - "text/html"
      summary: "endpoint for Authorization Code and Implicit grants"
      description: "description"
      parameters:
      - name: "response_type"
        in: "query"
        description: "request an authorization code or or access token (implicit)"
        required: true
        type: "string"
        enum:
        - "code"
        - "token"
      - name: "client_id"
        in: "query"
        description: "Application client ID"
        required: true
        type: "string"
      - name: "scope"
        in: "query"
        description: "Scope being requested"
        type: "string"
        required: true
      - name: "redirect_uri"
        in: "query"
        type: "string"
        description: "URI where user is redirected to after authorization"
        required: false
      - name: "state"
        in: "query"
        type: "string"
        description: "This string will be echoed back to application when user is\
          \ redirected"
        required: false
      responses:
        200:
          description: "An HTML form for authentication or authorization of this request."
        302:
          description: "Redirect to the clients redirect_uri containing one of the\
            \ following\n- **authorization code** for Authorization code grant\n-\
            \ **access token** for Implicity grant\n- **error** in case of errors,\
            \ such as the user has denied the request\n"
      security:
      - clientID: []
    post:
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "text/html"
      summary: "submit approval to authorization code or access token"
      description: "Submit resource owners approval (or rejection) for the OAuth2\
        \ Server to issue an\nauthorization code or access token to the application.\n"
      security:
      - clientID: []
      parameters:
      - name: "client_id"
        in: "formData"
        description: "application requesting the access code or token"
        required: true
        type: "string"
      - name: "scope"
        in: "formData"
        description: "requested scope of this authorization"
        required: true
        type: "string"
      - name: "resource-owner"
        in: "formData"
        description: "resource owners user name"
        required: true
        type: "string"
      - name: "redirect_uri"
        in: "formData"
        description: "URI the application is requesting this code or token to be redirected\
          \ to"
        required: true
        type: "string"
      - name: "original-url"
        in: "formData"
        description: "URL of the original authorization request"
        required: true
        type: "string"
      - name: "dp-state"
        in: "formData"
        description: "state information provided in the authorization form"
        required: true
        type: "string"
      - name: "dp-data"
        in: "formData"
        description: "state information provided in the authorization form"
        required: true
        type: "string"
      responses:
        200:
          description: "Cool"
  /token:
    post:
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      summary: "Request Access Tokens"
      description: "This endpoint allows requesting an access token following one\
        \ of the flows below:\n- Authorization Code (exchange code for access token)\n\
        - Client Credentials (2-legged, there isnt resource owner information)\n-\
        \ Resource Owner Password Credentials (2-legged, client provides resource\
        \ owner name and password)\n- Refresh Token (exchange refresh token for a\
        \ new access code)\n\nThe table below indicates the required parameters for\
        \ each specific grant_type options.\nEmpty cells indicate a parameter is ignored\
        \ for that specific grant type.\n\nClient authentication:\n- Confidential\
        \ clients should authenticate using HTTP Basic Authentication. Alternatively,\
        \ they may post\n  their client_id and client_secret information as a formData\
        \ parameter.\n- Public clients should send their client_id as formData parameter.\n\
        \n| grant_type           | code       | client_credentials | password    |\
        \ refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n\
        | client_id            | required*  | required*          | required*   | required*\
        \     |\n| client_secret        | required*  | required*          | required*\
        \   | required*     |\n| code                 | required   |             \
        \       |             |               |\n| redirect_uri         | required\
        \   |                    |             |               |\n| username     \
        \        |            |                    | required    |               |\n\
        | password             |            |                    | required    | \
        \              |\n| scope                |            | optional         \
        \  | optional    |               |\n| refresh_token        |            |\
        \                    |             | required      |\n\nThe implicit grant\
        \ requests, see /oauth2/authorize.\n"
      security: []
      parameters:
      - name: "grant_type"
        in: "formData"
        description: "Type of grant"
        type: "string"
        required: true
        enum:
        - "authorization_code"
        - "password"
        - "client_credentials"
        - "refresh_token"
      - name: "client_id"
        in: "formData"
        description: "Application client ID, can be provided in formData or using\
          \ HTTP Basic Authentication"
        required: false
        type: "string"
      - name: "client_secret"
        in: "formData"
        description: "Application secret, must be provided in formData or using HTTP\
          \ Basic Authentication"
        required: false
        type: "string"
      - name: "code"
        in: "formData"
        description: "Authorization code provided by the /oauth2/authorize endpoint"
        required: false
        type: "string"
      - name: "redirect_uri"
        in: "formData"
        description: "required only if the redirect_uri parameter was included in\
          \ the authorization request /oauth2/authorize; their values MUST be identical."
        required: false
        type: "string"
      - name: "username"
        in: "formData"
        type: "string"
        description: "Resource owner username"
        required: false
      - name: "password"
        in: "formData"
        type: "string"
        description: "Resource owner password"
        required: false
      - name: "scope"
        in: "formData"
        type: "string"
        description: "Scope being requested"
        required: false
      - name: "refresh_token"
        in: "formData"
        type: "string"
        description: "The refresh token that the client wants to exchange for a new\
          \ access token (refresh_token grant_type)"
        required: false
      responses:
        200:
          description: "json document containing token, etc."
          schema:
            $ref: "#/definitions/access_token_response"
        400:
          description: "json document that may contain additional details about the\
            \ failure"
  /oauth2/issued:
    get:
      produces:
      - "application/json"
      summary: "Returns list of permission granted to the owner"
      description: "This endpoint allows the return of all the issued permission for\
        \ a given authenticated owner per owner authenti\ndefined in the x-ibm-configuration\
        \ section\n"
      security:
      - clientIdHeader: []
        clientSecretHeader: []
      responses:
        200:
          description: "json document containing issued information, etc."
          schema:
            $ref: "#/definitions/issued_responses"
        401:
          description: "failure in retreiving issued list"
    delete:
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      summary: "Revoke an application/client permission by the authorized owner"
      description: "Revoke an application/client permission by the authorized owner"
      security:
      - clientIdHeader: []
        clientSecretHeader: []
      parameters:
      - name: "client-id"
        in: "query"
        description: "client-id is the OAuth client_id or application id to be revoked"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
x-ibm-configuration:
  testable: true
  enforced: true
  phase: "realized"
  oauth2:
    client-type: "confidential"
    scopes:
      authtest3: "authtest3"
    grants:
    - "password"
    identity-extraction:
      type: "basic"
    authentication:
      x-ibm-authentication-url:
        url: "http://192.168.225.1:8080/test/okBasic.jsp"
        tls-profile: ""
    authorization:
      type: "authenticated"
    access-token:
      ttl: 3600
    refresh-token:
      count: 2048
      ttl: 2682000
    revocation:
      type: "gateway"
  cors:
    enabled: true
  type: "oauth"
definitions:
  access_token_response:
    type: "object"
    additionalProperties: false
    required:
    - "token_type"
    - "access_token"
    - "expires_in"
    properties:
      token_type:
        enum:
        - "bearer"
      access_token:
        type: "string"
      expires_in:
        type: "integer"
      scope:
        type: "string"
      refresh_token:
        type: "string"
  issued_response:
    type: "object"
    additionalProperties: false
    required:
    - "clientId"
    - "owner"
    - "scope"
    - "issuedAt"
    - "expiredAt"
    - "refreshTokenIssued"
    properties:
      clientId:
        type: "string"
      clientName:
        type: "string"
      owner:
        type: "string"
      scope:
        type: "string"
      issuedAt:
        type: "string"
      expiredAt:
        type: "string"
      refreshTokenIssued:
        type: "boolean"
      miscInfo:
        type: "string"
  issued_responses:
    type: "array"
    items:
      $ref: "#/definitions/issued_response"
